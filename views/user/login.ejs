<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sign In - AURUM</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            line-height: 1.6;
            color: #333;
            background: #f8fafc;
        }

        .container {
            display: flex;
            min-height: 100vh;
            background: #fff;
            box-shadow: 0 20px 25px -5px rgba(0,0,0,0.1);
        }

        .image-section {
            flex: 1;
            background: linear-gradient(135deg, #8B7355 0%, #A0956B 100%);
            background-image: url('https://images.unsplash.com/photo-1506744038136-46273834b3fb?ixlib=rb-4.0.3&auto=format&fit=crop&w=1200&q=80');
            background-size: cover;
            background-position: center;
            position: relative;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .overlay {
            position: absolute;
            top: 0; left: 0; right: 0; bottom: 0;
            background: linear-gradient(135deg, rgba(139,115,85,0.9) 0%, rgba(160,149,107,0.9) 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            text-align: center;
            color: white;
            padding: 2rem;
        }

        .brand-info h1 {
            font-size: 4rem;
            font-weight: 700;
            margin-bottom: 1rem;
            animation: slideInUp 1s ease-out;
            letter-spacing: 0.2em;
            color: #F5F5DC;
        }
        .brand-info p {
            font-size: 1.3rem;
            font-weight: 300;
            max-width: 450px;
            opacity: 0.95;
            animation: slideInUp 1s ease-out 0.2s both;
            line-height: 1.8;
            color: #F5F5DC;
        }

        .form-section {
            flex: 1;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 2rem;
            background: #ffffff;
        }

        .form-container {
            width: 100%;
            max-width: 450px;
            animation: slideInRight 0.8s ease-out;
        }

        .form-header {
            text-align: center;
            margin-bottom: 2rem;
        }
        .form-header h2 {
            font-size: 2.2rem;
            font-weight: 600;
            color: #8B7355;
            margin-bottom: 0.5rem;
            letter-spacing: 0.05em;
        }
        .form-header p {
            color: #6B5B47;
            font-size: 1rem;
            font-style: italic;
        }

        /* Enhanced error/message styling */
        .server-error, .server-message {
            padding: 1rem;
            border-radius: 12px;
            margin-bottom: 1.5rem;
            text-align: center;
            font-size: 0.9rem;
            font-weight: 500;
            animation: slideInUp 0.3s ease-out;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }

        .server-error {
            background: #fed7d7;
            border: 1px solid #e53e3e;
            color: #c53030;
        }

        .server-message.success {
            background: #c6f6d5;
            border: 1px solid #38a169;
            color: #22543d;
        }

        .server-message.info {
            background: #bee3f8;
            border: 1px solid #3182ce;
            color: #2c5282;
        }

        /* API Message styling for fetch responses */
        .api-message {
            padding: 1rem;
            border-radius: 12px;
            margin-bottom: 1.5rem;
            text-align: center;
            font-size: 0.9rem;
            font-weight: 500;
            animation: slideInUp 0.3s ease-out;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            opacity: 0;
            transform: translateY(-10px);
            transition: all 0.3s ease;
        }

        .api-message.show {
            opacity: 1;
            transform: translateY(0);
        }

        .api-message.success {
            background: #c6f6d5;
            border: 1px solid #38a169;
            color: #22543d;
        }

        .api-message.error {
            background: #fed7d7;
            border: 1px solid #e53e3e;
            color: #c53030;
        }

        .form-group { margin-bottom: 1.5rem; }
        .input-container {
            position: relative;
        }
        .input-container input {
            width: 100%;
            padding: 1rem 1rem 1rem 3rem;
            border: 2px solid #D4C4A8;
            border-radius: 12px;
            font-size: 1rem;
            background: #FEFCF7;
            transition: all 0.3s ease;
            outline: none;
        }
        .input-container input:focus {
            border-color: #8B7355;
            background: #fff;
            box-shadow: 0 0 0 3px rgba(139,115,85,0.10);
            transform: translateY(-2px);
        }
        .input-icon {
            position: absolute;
            left: 1rem;
            top: 50%;
            transform: translateY(-50%);
            color: #8B7355;
            transition: color 0.3s ease;
        }
        .input-container input:focus + .input-icon {
            color: #6B5B47;
        }
        .toggle-password {
            position: absolute;
            right: 1rem;
            top: 50%;
            transform: translateY(-50%);
            color: #8B7355;
            cursor: pointer;
            transition: color 0.3s ease;
        }
        .toggle-password:hover { color: #6B5B47; }

        .forgot-password {
            text-align: right;
            margin-bottom: 2rem;
        }
        .forgot-password a {
            color: #8B7355;
            text-decoration: none;
            font-size: 0.9rem;
            transition: color 0.3s ease;
        }
        .forgot-password a:hover {
            color: #6B5B47;
            text-decoration: underline;
        }

        .login-btn {
            width: 100%;
            padding: 1rem;
            background: linear-gradient(135deg, #8B7355 0%, #A0956B 100%);
            color: white;
            border: none;
            border-radius: 12px;
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-bottom: 1.5rem;
            letter-spacing: 0.05em;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .login-btn:hover:not(:disabled) {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(139,115,85,0.3);
        }
        
        .login-btn:active:not(:disabled) { 
            transform: translateY(0);
        }

        .login-btn:disabled {
            opacity: 0.7;
            cursor: not-allowed;
            transform: none;
        }

        .btn-loading {
            display: none;
            width: 20px;
            height: 20px;
            border: 2px solid transparent;
            border-top: 2px solid white;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin-right: 0.5rem;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .divider {
            text-align: center;
            margin: 1.5rem 0;
            position: relative;
        }
        .divider::before {
            content: '';
            position: absolute;
            top: 50%; left: 0; right: 0;
            height: 1px;
            background: #D4C4A8;
        }
        .divider span {
            background: #fff;
            padding: 0 1rem;
            color: #8B7355;
            font-size: 0.9rem;
        }

        .google-btn {
            width: 100%;
            padding: 1rem;
            border: 2px solid #D4C4A8;
            background: white;
            border-radius: 12px;
            font-size: 1rem;
            font-weight: 500;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.75rem;
            transition: all 0.3s ease;
            margin-bottom: 1.5rem;
            color: #8B7355;
            text-decoration: none;
        }
        .google-btn:hover {
            border-color: #8B7355;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(139,115,85,0.15);
            color: #8B7355;
            text-decoration: none;
        }
        .google-icon { width: 20px; height: 20px; }

        .signup-link { text-align: center;}
        .signup-link p { color: #6B5B47; font-size: 0.95rem;}
        .signup-link a {
            color: #8B7355;
            text-decoration: none;
            font-weight: 600;
            transition: color 0.3s ease;
        }
        .signup-link a:hover { color: #6B5B47; text-decoration: underline; }

        .home-link {
            position: fixed;
            top: 1.5rem;
            left: 1.5rem;
            z-index: 1000;
            background: rgba(139, 115, 85, 0.9);
            color: white;
            padding: 0.6rem 1.2rem;
            border-radius: 25px;
            text-decoration: none;
            font-weight: 600;
            font-size: 0.9rem;
            transition: all 0.3s ease;
            backdrop-filter: blur(10px);
            border: 2px solid rgba(255, 255, 255, 0.2);
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        }

        .home-link:hover {
            background: rgba(107, 91, 71, 0.9);
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
            color: white;
            text-decoration: none;
        }

        .home-link i {
            margin-right: 0.5rem;
            font-size: 0.8rem;
        }

        @keyframes slideInUp {
            from { opacity: 0; transform: translateY(30px);}
            to { opacity: 1; transform: translateY(0);}
        }
        @keyframes slideInRight {
            from { opacity: 0; transform: translateX(50px);}
            to { opacity: 1; transform: translateX(0);}
        }
        
        @media (max-width: 768px) {
            .container { flex-direction: column;}
            .image-section { min-height: 30vh; flex: none;}
            .brand-info h1 { font-size: 2.5rem;}
            .brand-info p { font-size: 1.1rem;}
            .form-section { padding: 1.5rem;}
            .form-header h2 { font-size: 1.8rem;}
            
            .home-link {
                top: 1rem;
                left: 1rem;
                padding: 0.5rem 1rem;
                font-size: 0.8rem;
            }
        }
        
        @media (max-width: 480px) {
            .form-section { padding: 1rem;}
            .input-container input { padding: 0.875rem 0.875rem 0.875rem 2.5rem;}
            .input-icon {left: 0.875rem;}
            .toggle-password { right: 0.875rem;}
            
            .home-link {
                top: 0.8rem;
                left: 0.8rem;
                padding: 0.4rem 0.8rem;
                font-size: 0.75rem;
            }
            
            .home-link i {
                margin-right: 0.3rem;
                font-size: 0.7rem;
            }
        }
    </style>
</head>
<body>
    <a href="/" class="home-link">
        <i class="fas fa-home"></i> Home
    </a>

    <div class="container">
        <div class="image-section">
            <div class="overlay">
                <div class="brand-info">
                    <h1>AURUM</h1>
                    <p>Welcome back to the timeless world of sophisticated fashion. Your luxury awaits.</p>
                </div>
            </div>
        </div>
        <div class="form-section">
            <div class="form-container">
                <div class="form-header">
                    <h2>Welcome Back</h2>
                    <p>Sign in to continue your journey with AURUM's exclusive collection</p>
                </div>

                <!-- Enhanced server message display -->
                <% if (typeof message !== 'undefined' && message) { %>
                    <div class="server-error">
                        <i class="fas fa-exclamation-circle"></i>
                        <%= message %>
                    </div>
                <% } %>

                <!-- API Message display for fetch responses -->
                <div id="apiMessage" class="api-message"></div>

                <form id="loginForm" class="login-form" action="/login" method="POST">
                    <div class="form-group">
                        <div class="input-container">
                            <input type="email" id="email" name="email" placeholder="Email Address" required>
                            <i class="fas fa-envelope input-icon"></i>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="input-container">
                            <input type="password" id="password" name="password" placeholder="Password" required>
                            <i class="fas fa-lock input-icon"></i>
                            <i class="fas fa-eye toggle-password" id="togglePassword"></i>
                        </div>
                    </div>
                    
                    <div class="forgot-password">
                        <a href="/forgot-password">Forgot Password?</a>
                    </div>
                    
                    <button type="submit" class="login-btn" id="loginBtn">
                        <div class="btn-loading" id="btnLoading"></div>
                        <span id="btnText">Sign In</span>
                    </button>
                </form>

                <div class="divider"><span>or</span></div>

                <!-- Updated Google login button with correct route -->
                <a href="/auth/google/login" class="google-btn" id="googleLoginBtn">
                    <i class="fab fa-google google-icon"></i>
                    <span>Continue with Google</span>
                </a>

                <div class="signup-link">
                    <p>New to AURUM? <a href="/signup">Create Account</a></p>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Password toggle functionality
        document.getElementById('togglePassword').addEventListener('click', function() {
            const passwordField = document.getElementById('password');
            const toggleIcon = this;
            
            if (passwordField.type === 'password') {
                passwordField.type = 'text';
                toggleIcon.classList.remove('fa-eye');
                toggleIcon.classList.add('fa-eye-slash');
            } else {
                passwordField.type = 'password';
                toggleIcon.classList.remove('fa-eye-slash');
                toggleIcon.classList.add('fa-eye');
            }
        });

        // API message handling functions
        function showApiMessage(message, type) {
            const apiMessage = document.getElementById('apiMessage');
            apiMessage.innerHTML = `
                <i class="fas ${type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle'}"></i>
                ${message}
            `;
            apiMessage.className = `api-message ${type} show`;
            
            if (type === 'success') {
                setTimeout(() => {
                    apiMessage.classList.remove('show');
                }, 5000);
            }
        }

        function hideApiMessage() {
            const apiMessage = document.getElementById('apiMessage');
            apiMessage.classList.remove('show');
            setTimeout(() => {
                apiMessage.className = 'api-message';
                apiMessage.innerHTML = '';
            }, 300);
        }

        // Enhanced login form handling (can be used for future API implementation)
        document.getElementById('loginForm').addEventListener('submit', function(e) {
            // Current implementation uses regular form submission
            // This can be enhanced to use fetch API if needed
            const loginBtn = document.getElementById('loginBtn');
            const btnText = document.getElementById('btnText');
            const btnLoading = document.getElementById('btnLoading');
            
            // Show loading state
            loginBtn.disabled = true;
            btnText.style.display = 'none';
            btnLoading.style.display = 'block';
            
            // For regular form submission, we don't prevent default
            // The form will submit normally and redirect on success/failure
        });

        // Google login button click handler
        document.getElementById('googleLoginBtn').addEventListener('click', function(e) {
            // Optional: Add loading state for Google login
            this.style.opacity = '0.7';
            this.style.pointerEvents = 'none';
            
            // Re-enable after a delay in case user cancels
            setTimeout(() => {
                this.style.opacity = '1';
                this.style.pointerEvents = 'auto';
            }, 3000);
        });

        // Auto-hide server error messages
        const serverError = document.querySelector('.server-error');
        if (serverError) {
            setTimeout(() => {
                serverError.style.opacity = '0';
                serverError.style.transform = 'translateY(-20px)';
                setTimeout(() => {
                    if (serverError.parentNode) {
                        serverError.remove();
                    }
                }, 300);
            }, 8000); // Show error for 8 seconds for blocked user messages
        }

        // Handle URL parameters for API responses (if implemented)
        const urlParams = new URLSearchParams(window.location.search);
        const errorParam = urlParams.get('error');
        const successParam = urlParams.get('success');

        if (errorParam && !serverError) {
            let errorMessage = 'An error occurred. Please try again.';
            
            switch(errorParam) {
                case 'google_auth_failed':
                    errorMessage = 'Google authentication failed. Please try again.';
                    break;
                case 'google_user_blocked':
                    errorMessage = 'Your account has been blocked by admin. Please contact support.';
                    break;
                case 'account_blocked':
                    errorMessage = 'Your account has been blocked by admin. Please contact support.';
                    break;
                case 'user_not_found':
                    errorMessage = 'No account found with this Google account. Please sign up first.';
                    break;
                case 'admin_not_allowed':
                    errorMessage = 'Admin accounts cannot login here. Please use the admin portal.';
                    break;
                case 'session_error':
                    errorMessage = 'Session error occurred. Please try again.';
                    break;
            }
            
            showApiMessage(errorMessage, 'error');
        }

        if (successParam) {
            let successMessage = 'Operation completed successfully!';
            
            switch(successParam) {
                case 'password_reset':
                    successMessage = 'Password reset successful! Please login with your new password.';
                    break;
                case 'account_verified':
                    successMessage = 'Account verified successfully! Please login.';
                    break;
            }
            
            showApiMessage(successMessage, 'success');
        }
    </script>
</body>
</html>
